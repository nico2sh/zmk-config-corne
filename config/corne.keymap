#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0>;
        };

        Esc_2 {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            layers = <0>;
        };
    };

    behaviors {
        home_row_l: home_row_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 30 31 32 33 34 35 23 22 21 20 19 7 8 9 10 11 41 40 39 38 37 36>;
            quick-tap-ms = <150>;
        };

        layer_tap_qt: layer_tap_qt {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_QT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        mod_tap_qt: mod_tap_qt {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_QT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
        };

        home_row_r: home_row_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            quick-tap-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&layer_tap_qt 5 GRAVE  &kp Q                   &kp W                   &kp E                       &kp R                      &kp T                         &kp Y                          &kp U                      &kp I                        &kp O                    &kp P                            &kp EQUAL
&kp LEFT_SHIFT         &home_row_l LEFT_GUI A  &home_row_l LEFT_ALT S  &home_row_l LEFT_CONTROL D  &home_row_l LEFT_SHIFT F   &kp G                         &kp H                          &home_row_r RIGHT_SHIFT J  &home_row_r RIGHT_CONTROL K  &home_row_r RIGHT_ALT L  &home_row_r RIGHT_GUI SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_GUI           &kp Z                   &kp X                   &kp C                       &kp V                      &kp B                         &kp N                          &kp M                      &kp COMMA                    &kp PERIOD               &kp SLASH                        &kp MINUS
                                                                       &kp LEFT_CONTROL            &layer_tap_qt 2 BACKSPACE  &mod_tap_qt LEFT_SHIFT TAB    &mod_tap_qt RIGHT_SHIFT ENTER  &layer_tap_qt 1 SPACE      &kp RIGHT_ALT
            >;
        };

        Lower {
            bindings = <
&kp ESCAPE  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8     &kp NUMBER_9          &kp NUMBER_0           &trans
&trans      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPERSAND   &kp ASTERISK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans      &trans           &trans        &trans        &trans        &trans          &trans        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
                                           &trans        &trans        &trans          &trans        &trans          &trans
            >;
        };

        Raise {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5           &kp F6    &kp F7            &kp F8          &kp F9      &kp F10  &kp C_VOLUME_UP
&trans  &trans  &trans  &trans  &trans  &kp PAGE_UP      &kp LEFT  &kp DOWN          &kp UP          &kp RIGHT   &kp F11  &kp K_MUTE
&trans  &trans  &trans  &trans  &trans  &kp PAGE_DOWN    &trans    &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &kp F12  &kp C_VOLUME_DOWN
                        &trans  &trans  &trans           &trans    &trans            &trans
            >;
        };

        Config {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&none  &bt BT_PRV    &bt BT_NXT    &none         &none         &bt BT_CLR      &none  &none  &none  &none  &none  &none
                                   &none         &none         &none           &none  &none  &none
            >;
        };

        Gaming {
            bindings = <
&layer_tap_qt 6 ESC  &kp TAB    &kp Q  &kp W  &kp E     &kp R        &kp N1         &kp N2       &kp N3     &kp N4   &kp N5    &kp BACKSPACE
&kp T                &kp LSHFT  &kp A  &kp S  &kp D     &kp F        &kp N6         &kp N7       &kp N8     &kp N9   &kp N0    &kp SQT
&kp B                &kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &kp PAGE_DOWN  &kp PAGE_UP  &kp COMMA  &kp DOT  &kp FSLH  &kp MINUS
                                       &kp G  &kp LALT  &kp SPACE    &kp RET        &kp RALT     &kp RSHFT
            >;
        };

        To_Gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        From_Gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Config {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
